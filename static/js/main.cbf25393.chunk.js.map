{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","react_default","a","createElement","className","rel","href","integrity","crossorigin","class","id","data-toggle","role","aria-haspopup","aria-expanded","src","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cbf25393.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\n/*\nBroken at the moment. We found a library called reactstrap that has a bunch of cool elements we want to use, like this navbar.\n\nimport { Navbar } from 'reactstrap';\nimport { NavbarBrand } from 'reactstrap';\nimport { NavbarToggler } from 'reactstrap';\nimport { Collapse } from 'reactstrap';\nimport { Nav } from 'reactstrap';\nimport { NavItem } from 'reactstrap';\nimport { NavLink } from 'reactstrap';\nimport { UncontrolledDropdown } from 'reactstrap';\nimport { DropdownToggle } from 'reactstrap';\nimport { DropdownMenu } from 'reactstrap';\nimport { DropdownItem } from 'reactstrap';\n\n<Navbar color=\"light\" light expand=\"md\">\n          <NavbarBrand href=\"/\">reactstrap</NavbarBrand>\n          <NavbarToggler onClick={this.toggle} />\n          <Collapse isOpen={this.state.isOpen} navbar>\n            <Nav className=\"ml-auto\" navbar>\n              <NavItem>\n                <NavLink href=\"/components/\">Components</NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink href=\"https://github.com/reactstrap/reactstrap\">GitHub</NavLink>\n              </NavItem>\n              <UncontrolledDropdown nav inNavbar>\n                <DropdownToggle nav caret>\n                  Options\n                </DropdownToggle>\n                <DropdownMenu right>\n                  <DropdownItem>\n                    Option 1\n                  </DropdownItem>\n                  <DropdownItem>\n                    Option 2\n                  </DropdownItem>\n                  <DropdownItem divider />\n                  <DropdownItem>\n                    Reset\n                  </DropdownItem>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n            </Nav>\n          </Collapse>\n        </Navbar>\n*/\n\n/*\nStupid old navbar\n        <nav id=\"nav\" class=\"navbar sticky-top\">\n          <a href=\"#welcome\">Welcome</a>\n          <a href=\"#bigBang1\">Universe Origins</a>\n          <a href=\"#earthOrigins\">Earth Origins</a>\n        </nav>\n*/\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        \n        <header>\n          <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" \n          integrity=\"sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u\" \n          crossorigin=\"anonymous\"></link>\n        </header>\n\n        <main>\n          <nav class=\"navbar navbar-default sticky-top\">\n            <div class=\"container-fluid\">\n              <div class=\"navbar-header\">\n                <a class=\"navbar-brand\" href=\"#welcome\">DiscoverET</a>\n              </div>\n              <div class=\"collapse navbar-collapse\"   id=\"bs-example-navbar-collapse-1\">\n                <ul class=\"nav navbar-nav\">\n                  <li class=\"active\"><a href=\"#welcome\">Welcome</a></li>\n                  <li><a href=\"#universeOrigins1\">Universe Origins</a></li>\n                  <li><a href=\"#earthOrigins1\">Earth Origins</a></li>\n                  <li class=\"dropdown\">\n                    <a href=\"#dropdown-menu\" class=\"dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">Menu<span class=\"caret\"></span></a>\n                    <ul class=\"dropdown-menu\">\n                      <li><a href=\"#welcome\">Welcome</a></li>\n                      <li><a href=\"#universeOrigins1\">Universe Origins</a></li>\n                      <li><a href=\"#earthOrigins1\">Earth Origins</a></li>\n                      <li><a href=\"#\">Something else here</a></li>\n                      <li role=\"separator\" class=\"divider\"></li>\n                      <li><a href=\"#\">Separated link</a></li>\n                      <li role=\"separator\" class=\"divider\"></li>\n                      <li><a href=\"#\">One more separated link</a></li>\n                    </ul>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </nav>\n\n          <body>\n            <div class=\"page\" id=\"page1\">\n              <a id=\"welcome\"></a>\n              <content class=\"content\">\n                <p class=\"blurb\">Welcome to discoverET</p>\n              </content>\n            </div>\n            \n            <div class=\"page\" id=\"page2\">\n              <a id=\"universeOrigins1\"></a>\n              <content class=\"content\">\n                <p class=\"blurb\">13.82 years ago, the universe was born.\n                </p>\n              </content>\n            </div>\n            \n            <div class=\"page\" id=\"page3\">\n              <a id=\"universeOrigins2\"></a>\n              <content class=\"content\"> \n                <p class=\"blurb\">All matter that exists in our universe today expanded from an infinitely small and dense singularity into the endless expanse of the cosmos.\n                </p>\n              </content> \n            </div>\n\n            <div class=\"page\" id=\"page4\">\n              <a id=\"earthOrigins1\"></a>\n              <content class=\"content\">\n                <p class=\"blurb\">Earth formed from accumulation of matter in the orbit of the sun.\n                </p>\n              </content>\n            </div>\n          </body>\n        </main>\n        \n        <script src=\"https://code.jquery.com/jquery-3.3.1.slim.min.js\"\n          integrity=\"sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo\"\n          crossorigin=\"anonymous\">\n        </script>\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js\"\n          integrity=\"sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49\"\n          crossorigin=\"anonymous\">\n        </script>\n        <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js\"\n          integrity=\"sha384-ChfqqxuZUCnJSK3+MXmPNIyE6ZbWh2IMqE241rYiqJxyMiZ6OW/JmZQ5stwEULTy\"\n          crossorigin=\"anonymous\">\n        </script>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}